#!/bin/sh

start()
{
  ret=0
  for arg in `sed -e 's/ $//; y/ /\n/' /proc/cmdline`; do
    case "$arg" in
      make-ramdisk=*)
        src=${arg#make-ramdisk=}
	[ -d /tmp/ramdisk ] && continue
	copied=0
        echo -n "Copying installation image from $src to ramdisk..."

	# hang around a while for USB devices to settle
	for n in `seq 1 5`; do
	  [ -b $src ] && break
	  sleep 5
	done
	if ! [ -b $src ]; then
	    echo " failed"
	    continue
	fi

	# mount the source
	mkdir /tmp/src
	for fs in iso9660 vfat ext3; do
	  mount -t $fs -o ro $src /tmp/src 2>/dev/null && break
	done
	if grep -q ' /tmp/src ' /proc/mounts; then 

	  # create appropriately sized ramdisk and populate
	  fssize=`df -k /tmp/src | sed -ne 's#^/[^ ]\+ \+[0-9]\+ \+\([0-9]\+\).*#\1#p'`
	  mkdir /tmp/ramdisk
	  mount -t tmpfs -o size=$((fssize+1000))k tmpfs /tmp/ramdisk
	  if cp -a /tmp/src/* /tmp/ramdisk; then
	    echo " done"
	    copied=1
	  else
	    umount /tmp/ramdisk
	    rmdir /tmp/ramdisk
	  fi
	  umount /tmp/src
	fi
	rmdir /tmp/src
	if [ $copied -eq 0 ]; then
	  echo " failed"
	  ret=1
	fi;;
    esac
  done
  return $ret
}

stop()
{
  grep -q ' /tmp/ramdisk ' && umount /tmp/ramdisk
  return 0
}


RET=0
case "$1" in
  start)
    start
    RET=$?;;
  stop)
    stop
    RET=$?;;
  *)
    echo "Usage: $0 start|stop"
    RET=1
esac

exit $RET
