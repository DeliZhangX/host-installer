--- intl/_dcigettext.c	2006-08-04 17:12:43.507997410 +0100
+++ intl/dcigettext.c	2006-08-04 17:13:26.661249829 +0100
@@ -974,18 +974,18 @@
      size_t translation_len;
 {
   struct loaded_domain *domaindata = (struct loaded_domain *) domain->data;
-  unsigned long int index;
+  unsigned long int _index;
   const char *p;
 
-  index = plural_eval (domaindata->plural, n);
-  if (index >= domaindata->nplurals)
+  _index = plural_eval (domaindata->plural, n);
+  if (_index >= domaindata->nplurals)
     /* This should never happen.  It means the plural expression and the
        given maximum value do not match.  */
-    index = 0;
+    _index = 0;
 
   /* Skip INDEX strings at TRANSLATION.  */
   p = translation;
-  while (index-- > 0)
+  while (_index-- > 0)
     {
 #ifdef _LIBC
       p = __rawmemchr (p, '\0');
--- lib/modem.c.orig	2007-09-27 12:10:33.000000000 -0400
+++ lib/modem.c	2007-09-27 12:12:44.000000000 -0400
@@ -147,6 +147,17 @@
   long speed = -1;
   
   attr = init_serial_port(fd);
+#ifdef __UCLIBC__
+  PORTSPEED(B115200)
+  if(find_legacy_modem(fd) == 3){
+    speed = 115200;
+  }else{
+    PORTSPEED(B57600)
+    if(find_legacy_modem(fd) == 3){
+      speed = 57600;
+    }/*endif*/
+  }/*endif*/
+#else
   PORTSPEED(B230400)
   if(find_legacy_modem(fd) == 3){
     speed = 230400;
@@ -188,6 +199,7 @@
       }/*endif*/
     }/*endif*/
   }/*endif*/
+#endif
   free(attr);
   return speed;
 }/*endfunc modem_speed*/
