#!/bin/bash -ex
#

# This ensures we exit with non-zero error value should *anything* fail
trap 'rc=$? ; [ $rc -eq 0 ] && exit $rc' EXIT 

DEVICE=$1
RAW_PARTITION=$2
STATE_PARTITION=$3

# find link under /dev/disk/by-id that points to block device node
# e.g. "get_disk_by_id_link /dev/sda6"
get_disk_by_id_link() {
    orig_dev="$1"
    orig_inode=$(ls -i "$orig_dev"| cut -f1 -d' ')
    for dev in /dev/disk/by-id/* ; do
        inode=$(ls -Li "$dev"| cut -f1 -d' ')
        if [ "$inode" = "$orig_inode" ] ; then
            echo "$dev"
            return 0
        fi
    done

    # For disks that don't populate /dev/disk/by-id, we
    # can use the input device node *if* it's on the cciss bus
    # -- we assume that cciss devices are not subject to
    # device renaming at boot.
    if [[ $orig_dev == /dev/cciss/* ]] ; then
        echo "$orig_dev"
        return 0
    fi

    return 1
}

# Tell XAPI to claim partition local storage on first boot

PARTITION=$(get_disk_by_id_link ${RAW_PARTITION})
CONFIG_MNT=$(mktemp -d /tmp/mnt-XXXXXX)
mount ${STATE_PARTITION} $CONFIG_MNT
INSTALLER_OVERLAY=$CONFIG_MNT/installer
DATA_DIR=$INSTALLER_OVERLAY/etc/firstboot.d/data/
mkdir -p $DATA_DIR
cat <<EOF > $DATA_DIR/default-storage.conf
PARTITIONS='$PARTITION'
TYPE='lvm'
EOF
umount $CONFIG_MNT
rmdir $CONFIG_MNT

exit 0
